 STATE 1
 regexp (///)|(//)|(/\*\*)|(/\*)
  0: normal  (exit level: 0, exit_all: 0, next: none)
  1: comment (///) (exit level: 0, exit_all: 0, next: 2)
     STATE 2
     regexp (\z)|((?:(?:<?)[[:word:]\./\-_]+\@[[:word:]\./\-_]+(?:>?)))|((?:(?:<?)[[:word:]]+://[[:word:]\./\-_]+(?:>?)))|(<!DOCTYPE)|(<!--)|((?:<(?:/)?[[:alpha:]][[:alnum:]]*(?:/)?>))|(<(?:/)?[[:alpha:]][[:alnum:]]*)|((?:&(?:[[:alnum:]]+);))|((?:\@[[:alpha:]]+))|((?:(?:TODO|FIXME)(?:[:]?)))
      0: comment  (exit level: 0, exit_all: 0, next: none)
      1: comment (\z) (exit level: 1, exit_all: 0, next: none)
      2: url ((?:(?:<?)[[:word:]\./\-_]+\@[[:word:]\./\-_]+(?:>?))) (exit level: 0, exit_all: 0, next: none)
      3: url ((?:(?:<?)[[:word:]]+://[[:word:]\./\-_]+(?:>?))) (exit level: 0, exit_all: 0, next: none)
      4: preproc (<!DOCTYPE) (exit level: 0, exit_all: 0, next: 3)
         STATE 3
         regexp (>)|(\")
          0: normal  (exit level: 0, exit_all: 0, next: none)
          1: preproc (>) (exit level: 1, exit_all: 0, next: none)
          2: string (\") (exit level: 0, exit_all: 0, next: 4)
             STATE 4
             regexp (\")|(\\.)
              0: string  (exit level: 0, exit_all: 0, next: none)
              1: string (\") (exit level: 1, exit_all: 0, next: none)
              2: string (\\.) (exit level: 0, exit_all: 0, next: none)
      5: comment (<!--) (exit level: 0, exit_all: 0, next: 5)
         STATE 5
         regexp (-->)|(<!--)
          0: comment  (exit level: 0, exit_all: 0, next: none)
          1: comment (-->) (exit level: 1, exit_all: 0, next: none)
          2: comment (<!--) (exit level: 0, exit_all: 0, next: 5)
      6: keyword ((?:<(?:/)?[[:alpha:]][[:alnum:]]*(?:/)?>)) (exit level: 0, exit_all: 0, next: none)
      7: keyword (<(?:/)?[[:alpha:]][[:alnum:]]*) (exit level: 0, exit_all: 0, next: 6)
         STATE 6
         regexp ((?:/)?>)|((?:[^="[:blank:]>]+))|((?:=))|(\")
          0: normal  (exit level: 0, exit_all: 0, next: none)
          1: keyword ((?:/)?>) (exit level: 1, exit_all: 0, next: none)
          2: type ((?:[^="[:blank:]>]+)) (exit level: 0, exit_all: 0, next: none)
          3: symbol ((?:=)) (exit level: 0, exit_all: 0, next: none)
          4: string (\") (exit level: 0, exit_all: 0, next: 7)
             STATE 7
             regexp (\")|(\\.)
              0: string  (exit level: 0, exit_all: 0, next: none)
              1: string (\") (exit level: 1, exit_all: 0, next: none)
              2: string (\\.) (exit level: 0, exit_all: 0, next: none)
      8: preproc ((?:&(?:[[:alnum:]]+);)) (exit level: 0, exit_all: 0, next: none)
      9: type ((?:\@[[:alpha:]]+)) (exit level: 0, exit_all: 0, next: none)
      10: todo ((?:(?:TODO|FIXME)(?:[:]?))) (exit level: 0, exit_all: 0, next: none)
  2: comment (//) (exit level: 0, exit_all: 0, next: 8)
     STATE 8
     regexp (\z)
      0: comment  (exit level: 0, exit_all: 0, next: none)
      1: comment (\z) (exit level: 1, exit_all: 0, next: none)
  3: comment (/\*\*) (exit level: 0, exit_all: 0, next: 9)
     STATE 9
     regexp (\*/)|((?:(?:<?)[[:word:]\./\-_]+\@[[:word:]\./\-_]+(?:>?)))|((?:(?:<?)[[:word:]]+://[[:word:]\./\-_]+(?:>?)))|(<!DOCTYPE)|(<!--)|((?:<(?:/)?[[:alpha:]][[:alnum:]]*(?:/)?>))|(<(?:/)?[[:alpha:]][[:alnum:]]*)|((?:&(?:[[:alnum:]]+);))|((?:\@[[:alpha:]]+))|((?:(?:TODO|FIXME)(?:[:]?)))
      0: comment  (exit level: 0, exit_all: 0, next: none)
      1: comment (\*/) (exit level: 1, exit_all: 0, next: none)
      2: url ((?:(?:<?)[[:word:]\./\-_]+\@[[:word:]\./\-_]+(?:>?))) (exit level: 0, exit_all: 0, next: none)
      3: url ((?:(?:<?)[[:word:]]+://[[:word:]\./\-_]+(?:>?))) (exit level: 0, exit_all: 0, next: none)
      4: preproc (<!DOCTYPE) (exit level: 0, exit_all: 0, next: 10)
         STATE 10
         regexp (>)|(\")
          0: normal  (exit level: 0, exit_all: 0, next: none)
          1: preproc (>) (exit level: 1, exit_all: 0, next: none)
          2: string (\") (exit level: 0, exit_all: 0, next: 11)
             STATE 11
             regexp (\")|(\\.)
              0: string  (exit level: 0, exit_all: 0, next: none)
              1: string (\") (exit level: 1, exit_all: 0, next: none)
              2: string (\\.) (exit level: 0, exit_all: 0, next: none)
      5: comment (<!--) (exit level: 0, exit_all: 0, next: 12)
         STATE 12
         regexp (-->)|(<!--)
          0: comment  (exit level: 0, exit_all: 0, next: none)
          1: comment (-->) (exit level: 1, exit_all: 0, next: none)
          2: comment (<!--) (exit level: 0, exit_all: 0, next: 12)
      6: keyword ((?:<(?:/)?[[:alpha:]][[:alnum:]]*(?:/)?>)) (exit level: 0, exit_all: 0, next: none)
      7: keyword (<(?:/)?[[:alpha:]][[:alnum:]]*) (exit level: 0, exit_all: 0, next: 13)
         STATE 13
         regexp ((?:/)?>)|((?:[^="[:blank:]>]+))|((?:=))|(\")
          0: normal  (exit level: 0, exit_all: 0, next: none)
          1: keyword ((?:/)?>) (exit level: 1, exit_all: 0, next: none)
          2: type ((?:[^="[:blank:]>]+)) (exit level: 0, exit_all: 0, next: none)
          3: symbol ((?:=)) (exit level: 0, exit_all: 0, next: none)
          4: string (\") (exit level: 0, exit_all: 0, next: 14)
             STATE 14
             regexp (\")|(\\.)
              0: string  (exit level: 0, exit_all: 0, next: none)
              1: string (\") (exit level: 1, exit_all: 0, next: none)
              2: string (\\.) (exit level: 0, exit_all: 0, next: none)
      8: preproc ((?:&(?:[[:alnum:]]+);)) (exit level: 0, exit_all: 0, next: none)
      9: type ((?:\@[[:alpha:]]+)) (exit level: 0, exit_all: 0, next: none)
      10: todo ((?:(?:TODO|FIXME)(?:[:]?))) (exit level: 0, exit_all: 0, next: none)
  4: comment (/\*) (exit level: 0, exit_all: 0, next: 15)
     STATE 15
     regexp (\*/)|((?:(?:<?)[[:word:]\./\-_]+\@[[:word:]\./\-_]+(?:>?)))|((?:(?:<?)[[:word:]]+://[[:word:]\./\-_]+(?:>?)))|((?:(?:TODO|FIXME)(?:[:]?)))
      0: comment  (exit level: 0, exit_all: 0, next: none)
      1: comment (\*/) (exit level: 1, exit_all: 0, next: none)
      2: url ((?:(?:<?)[[:word:]\./\-_]+\@[[:word:]\./\-_]+(?:>?))) (exit level: 0, exit_all: 0, next: none)
      3: url ((?:(?:<?)[[:word:]]+://[[:word:]\./\-_]+(?:>?))) (exit level: 0, exit_all: 0, next: none)
      4: todo ((?:(?:TODO|FIXME)(?:[:]?))) (exit level: 0, exit_all: 0, next: none)
