source-highlight 

Highlight the syntax of a source file (e.g. Java) into a specific format (e.g. 
HTML)

Usage: source-highlight [OPTIONS]...

  -h, --help                    Print help and exit
  -V, --version                 Print version and exit
  -i, --input=filename          input file. default std input
  -o, --output=filename         output file. default std output. If STDOUT is 
                                  specified, the output is directed to standard 
                                  output
  -s, --src-lang=STRING         source language (use --lang-list to get the 
                                  complete list).  If not specified, the source 
                                  language will be guessed from the file 
                                  extension.
      --lang-list               list all the supported language and associated 
                                  language definition file
      --outlang-list            list all the supported output language and 
                                  associated language definition file
  -f, --out-format=STRING       output format (use --outlang-list to get the 
                                  complete list)  (default=`html')
  -d, --doc                     create an output file that can be used as a 
                                  stand alone document (e.g., not to be 
                                  included in another one)
      --no-doc                  cancel the --doc option even if it is implied 
                                  (e.g., when css is given)
  -c, --css=filename            the external style sheet filename.  Implies 
                                  --doc
  -T, --title=STRING            give a title to the output document.  Implies 
                                  --doc
  -t, --tab=INT                 specify tab length.  (default=`8')
  -H, --header=filename         file to insert as header
  -F, --footer=filename         file to insert as footer
      --style-file=filename     specify the file containing format options  
                                  (default=`default.style')
      --style-css-file=filename specify the file containing format options (in 
                                  css syntax)
      --outlang-def=filename    output language definition file
      --outlang-map=filename    output language map file  
                                  (default=`outlang.map')
      --data-dir=path           directory where language definition files and 
                                  language maps are searched for.  If not 
                                  specified these files are searched for in the 
                                  current directory and in the data dir 
                                  installation directory
      --output-dir=path         output directory
      --lang-def=filename       language definition file
      --lang-map=filename       language map file  (default=`lang.map')
      --show-lang-elements=filename
                                prints the language elements that are defined 
                                  in the language definition file
      --infer-lang              force to infer source script language 
                                  (overriding given language specification)

reference generation:
  -n, --line-number[=padding]   number all output lines, using the specified 
                                  padding character  (default=`0')
      --line-number-ref[=prefix]
                                number all output lines and generate an anchor, 
                                  made of the specified prefix + the line 
                                  number  (default=`line')
      --gen-references=STRING   generate references  (possible 
                                  values="inline", "postline", "postdoc" 
                                  default=`inline')
      --ctags-file=filename     specify the file generated by ctags that will 
                                  be used to generate references  
                                  (default=`tags')
      --ctags=cmd               how to run the ctags command.  If this option 
                                  is not specified, ctags will be executed with 
                                  the default value.  If it is specified with 
                                  an empty string, ctags will not be executed 
                                  at all  (default=`ctags --excmd=n 
                                  --tag-relative=yes')

testing:
  -v, --verbose                 verbose mode on
  -q, --quiet                   print no progress information
      --statistics              print some statistics (i.e., elapsed time)
      --gen-version             put source-highlight version in the generated 
                                  file  (default=on)
      --check-lang=filename     only check the correctness of a language 
                                  definition file
      --check-outlang=filename  only check the correctness of an output 
                                  language definition file
      --failsafe                if no language definition is found for the 
                                  input, it is simply copied to the output
  -g, --debug-langdef[=type]    debug a language definition.  In dump mode just 
                                  dumps all the steps; in interactive, at each 
                                  step, waits for some input (press ENTER to 
                                  step)  (possible values="interactive", 
                                  "dump" default=`dump')
      --show-regex=filename     show the regular expression automaton 
                                  corresponding to a language definition file
